@model GenreUpdateListViewModel

@{
    ViewData["Title"] = "Update Genre";
}
<div class="card">
    <div class="card-header">
        <h4>Update Genre name</h4>
    </div>
    <div class="card-body">

        <div>
            <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                <div class="btn-group" role="group">
                    <button id="btnGroupDrop1" type="button" class="btn btn-outline-deep-purple waves-effect my-sm-0 dropdown-toggle" data-toggle="dropdown"
                            aria-haspopup="true" aria-expanded="false">
                        Choose Genre
                    </button>
                    <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                        @foreach (var genre in Model.Genres)
                        {
                            <form asp-controller="Genre" asp-action="SetId" method="post"
                                  data-ajax="true"
                                  data-ajax-update="#genre-form"
                                  data-ajax-complete="onCompleteFunction">
                                <input type="hidden" asp-for="@Model.Id" value="@genre.Id" />
                                <input type="hidden" asp-for="@Model.Name" value="@genre.Name" />
                                <button type="submit" class="dropdown-item">@genre.Name</button>
                            </form>

                        }
                    </div>

                </div>
            </div>
        </div>

        <div id="genre-form">
            <partial name="_GenreInputPartial" model="@Model" />
        </div>


        @await Html.PartialAsync("_ResultPartial")
    </div>
</div>

@section Scripts {
    <script>
        function onCompleteFunction() {
            var form = $("#da-form");
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);
        }
    </script>
}
